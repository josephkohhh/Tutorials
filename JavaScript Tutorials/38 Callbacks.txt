Callback

A function passed as an argument to another function.

This ensures that a function is not going to run before a task is completed.
It also helps to develop asynchronous code - (When one function has to wait for another function)
It helps to avoid errors and potential problems.
Ex. Wait for a file to load

Ex.

.html

  <label id="myLabel"></label>

.js

let a = 5;
let b = 10;
let c = 15;

function sum1(a, b, c, callBack) {
    let total = a + b + c;
    callBack(total);
}

sum1(a, b, c, displayConsole);
sum1(a, b, c, displayDOM);

//using rest parameters and callback together
function sum2(callBack, ...numbers) {
    let total = 0;
    for (number of numbers) {
        total += number;
    }
    callBack(total);
}

sum2(displayConsole, a, b);
sum2(displayDOM, a, b, c);

function displayConsole(output) {
    console.log(`Total sum: ${output}`);
}

function displayDOM(output) {
    document.getElementById("myLabel").innerHTML = output;
}

