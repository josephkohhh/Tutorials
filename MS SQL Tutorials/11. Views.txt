Views

- When you use the SELECT statement to query data from one or more tables, you get a result set.
- Next time, if you want to get the same result set, you can save this query into a text file, open it, and execute it again.
- SQL Server provides a better way to save this query in the database catalog through a view.

A view is a named query stored in the database catalog that allows you to refer to it later:

CREATE VIEW [Schema].[Table] 
AS 
SELECT... 

Advantages of Views
- Security -> restrict users to access directly to a table and allow them to access a subset of data via views
- Simplicity -> simplify the complex queries with joins and conditions using a set of views
- Consistency -> you can reference the logic from the views rather than rewriting it in separate queries

Managing views in SQL Server:
Creating a new view
Renaming a view
Listing views in SQL Server
Getting view information
Removing a view
Creating an indexed view


*By definition, views do not store data except for indexed views
===================================================================================

Indexed View

Indexed views are materialized views that stores data physically like a table hence may provide better
query performance if they are used appropriately

To create an indexed view:

1. CREATE VIEW [ViewName]
   WITH SCHEMABINDING 
   AS 
   SELECT... 

Schemabinding prevent tables used in views to make any modifications that can affect the view's definition 
If you want to change structure of the underlying table which affect the view's definition, you must drop
the indexed view first before applying the changes

2. CREATE UNIQUE CLUSTERED INDEX / CREATE NONCLUSTERED INDEX 
   ucidx_column_name
   ON [Schema].[ViewName](column_name);

This materializes the view, creating a physical existence in the database

UNIQUE CLUSTERED INDEX = unique column
NONCLUSTERED INDEX = normal column

===================================================================================