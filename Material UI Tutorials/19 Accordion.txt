Accordion

It is used to toggle content which is collapsed by default
- to use accordion, import Accordion, AccordionSummary, AccordionDetails
- Eg. QnA section of a website

Ex.

MuiAccordion.tsx

import {
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Typography,
} from "@mui/material";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import { useState } from "react";

export const MuiAccordion = () => {
  const [expanded, setExpanded] = useState<string | false>(false);
  const handleChange = (isExpanded: boolean, panel: string) => {
    setExpanded(isExpanded ? panel : false);
  };
  return (
    <>
      <Accordion
        expanded={expanded === "panel1"}
        onChange={(event, isExpanded) => handleChange(isExpanded, "panel1")}
      >
        <AccordionSummary
          id="panel1-header"
          aria-controls="panel1-content"
          expandIcon={<ExpandMoreIcon />}
        >
          <Typography>Accordion 1</Typography>
        </AccordionSummary>
        <AccordionDetails>
          <Typography>
            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Error vero
            cumque fugiat laudantium velit eos ea exercitationem? Voluptatum
            reiciendis ipsam maxime adipisci praesentium corrupti tempora, cum,
            dignissimos odit exercitationem autem!
          </Typography>
        </AccordionDetails>
      </Accordion>

      <Accordion
        expanded={expanded === "panel2"}
        onChange={(event, isExpanded) => handleChange(isExpanded, "panel2")}
      >
        <AccordionSummary
          id="panel2-header"
          aria-controls="panel2-content"
          expandIcon={<ExpandMoreIcon />}
        >
          <Typography>Accordion 2</Typography>
        </AccordionSummary>
        <AccordionDetails>
          <Typography>
            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Error vero
            cumque fugiat laudantium velit eos ea exercitationem? Voluptatum
            reiciendis ipsam maxime adipisci praesentium corrupti tempora, cum,
            dignissimos odit exercitationem autem!
          </Typography>
        </AccordionDetails>
      </Accordion>
      <Accordion
        expanded={expanded === "panel3"}
        onChange={(event, isExpanded) => handleChange(isExpanded, "panel3")}
      >
        <AccordionSummary
          id="panel3-header"
          aria-controls="panel3-content"
          expandIcon={<ExpandMoreIcon />}
        >
          <Typography>Accordion 3</Typography>
        </AccordionSummary>
        <AccordionDetails>
          <Typography>
            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Error vero
            cumque fugiat laudantium velit eos ea exercitationem? Voluptatum
            reiciendis ipsam maxime adipisci praesentium corrupti tempora, cum,
            dignissimos odit exercitationem autem!
          </Typography>
        </AccordionDetails>
      </Accordion>
    </>
  );
};


------------

This tutorial shows how to build a group of accordion with only selected 
accordion expanded by keeping track of state



